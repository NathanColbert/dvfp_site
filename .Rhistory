beethoven_map <- data.frame(Group = map$Composer[6],
Lat = c(map$GeoBornLat[6], map$GeoSchoolLat[6],
map$GeoDiedLat[6]),
Long = c(map$GeoBornLong[6], map$GeoSchoolLong[6],
map$GeoDiedLong[6]))
dvorak_map <- data.frame(Group = map$Composer[7],
Lat = c(map$GeoBornLat[7], map$GeoSchoolLat[7],
map$GeoDiedLat[7]),
Long = c(map$GeoBornLong[7], map$GeoSchoolLong[7],
map$GeoDiedLong[7]))
verdi_map <- data.frame(Group = map$Composer[8],
Lat = c(map$GeoBornLat[8], map$GeoSchoolLat[8],
map$GeoDiedLat[8]),
Long = c(map$GeoBornLong[8], map$GeoSchoolLong[8],
map$GeoDiedLong[8]))
mahler_map <- data.frame(Group = map$Composer[9],
Lat = c(map$GeoBornLat[9], map$GeoSchoolLat[9],
map$GeoDiedLat[9]),
Long = c(map$GeoBornLong[9], map$GeoSchoolLong[9],
map$GeoDiedLong[9]))
one_icon <- icons(
makeIcon(iconUrl = "baby2.png"),
iconWidth = 40, iconHeight = 50
)
two_icon <- icons(
makeIcon(iconUrl = "ts2.png"),
iconWidth = 40, iconHeight = 50
)
three_icon <- icons(
makeIcon(iconUrl = "school.png"),
iconWidth = 40, iconHeight = 50
)
content <- paste("Composer:", map$Composer, "<br/>",
"Birth Date:", map$BirthDate, "<br/>",
"Birth Place:", map$Born, "<br/>",
"Quote:", map$Quote, "<br/>")
content1 <- paste("Composer:", map$Composer, "<br/>",
"School Name:", map$SchoolName, "<br/>",
"School City:", map$SchoolCity, "<br/>",
"Teacher:", map$TeacherName, "<br/>")
content3 <- paste("Composer:", map$Composer, "<br/>",
"Death Date:", map$DeathDate, "<br/>",
"Death Place", map$Died, "<br/>")
m <- leaflet(width = "100%") %>%
setView(lat = map$GeoSchoolLat[3],
lng = map$GeoSchoolLong[3], zoom = 5)  %>%
addTiles('http://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png') %>%
#Beethoven
addMarkers(~GeoBornLong, ~GeoBornLat,
popup = content, group = "Beethoven",
icon = one_icon, data = beet_map) %>%
addMarkers(~GeoSchoolLong, ~GeoSchoolLat,
popup = content1, group = "Beethoven",
icon = three_icon, data = beet_map) %>%
addMarkers(~GeoDiedLong, ~GeoDiedLat,
popup = content3, group = "Beethoven",
icon = two_icon, data = beet_map) %>%
#Berlioz
addMarkers(~GeoBornLong, ~GeoBornLat,
popup = content, group = "Berlioz",
icon = one_icon, data = be_map) %>%
addMarkers(~GeoSchoolLong, ~GeoSchoolLat,
popup = content1, group = "Berlioz",
icon = three_icon, data = be_map) %>%
addMarkers(~GeoDiedLong, ~GeoDiedLat,
popup = content3, group = "Berlioz",
icon = two_icon, data = be_map) %>%
#Brahms
addMarkers(~GeoBornLong, ~GeoBornLat,
popup = content, group = "Brahms",
icon = one_icon, data = br_map) %>%
addMarkers(~GeoSchoolLong, ~GeoSchoolLat,
popup = content1, group = "Brahms",
icon = three_icon, data = br_map) %>%
addMarkers(~GeoDiedLong, ~GeoDiedLat,
popup = content3, group = "Brahms",
icon = two_icon, data = br_map) %>%
#Chopin
addMarkers(~GeoBornLong, ~GeoBornLat,
popup = content, group = "Chopin",
icon = one_icon, data = ch_map) %>%
addMarkers(~GeoSchoolLong, ~GeoSchoolLat,
popup = content1, group = "Chopin",
icon = three_icon, data = ch_map) %>%
addMarkers(~GeoDiedLong, ~GeoDiedLat,
popup = content3, group = "Chopin",
icon = two_icon, data = ch_map) %>%
#Dvorak
addMarkers(~GeoBornLong, ~GeoBornLat,
popup = content, group = "Dvorak",
icon = one_icon, data = dvo_map) %>%
addMarkers(~GeoSchoolLong, ~GeoSchoolLat,
popup = content1, group = "Dvorak",
icon = three_icon, data = dvo_map) %>%
addMarkers(~GeoDiedLong, ~GeoDiedLat,
popup = content3, group = "Dvorak",
icon = two_icon, data = dvo_map) %>%
#Mahler
addMarkers(~GeoBornLong, ~GeoBornLat,
popup = content, group = "Mahler",
icon = one_icon, data = m_map) %>%
addMarkers(~GeoSchoolLong, ~GeoSchoolLat,
popup = content1, group = "Mahler",
icon = three_icon, data = m_map) %>%
addMarkers(~GeoDiedLong, ~GeoDiedLat,
popup = content3, group = "Mahler",
icon = two_icon, data = m_map) %>%
#Rachmaninoff
addMarkers(~GeoBornLong, ~GeoBornLat,
popup = content, group = "Rachmaninoff",
icon = one_icon, data = r_map) %>%
addMarkers(~GeoSchoolLong, ~GeoSchoolLat,
popup = content1, group = "Rachmaninoff",
icon = three_icon, data = r_map) %>%
addMarkers(~GeoDiedLong, ~GeoDiedLat,
popup = content3, group = "Rachmaninoff",
icon = two_icon, data = r_map) %>%
#Tchaikovsky
addMarkers(~GeoBornLong, ~GeoBornLat,
popup = content, group = "Tchaikovsky",
icon = one_icon, data = t_map) %>%
addMarkers(~GeoSchoolLong, ~GeoSchoolLat,
popup = content1, group = "Tchaikovsky",
icon = three_icon, data = t_map) %>%
addMarkers(~GeoDiedLong, ~GeoDiedLat,
popup = content3, group = "Tchaikovsky",
icon = two_icon, data = t_map) %>%
#Verdi
addMarkers(~GeoBornLong, ~GeoBornLat,
popup = content, group = "Verdi",
icon = one_icon, data = ver_map) %>%
addMarkers(~GeoSchoolLong, ~GeoSchoolLat,
popup = content1, group = "Verdi",
icon = three_icon, data = ver_map) %>%
addMarkers(~GeoDiedLong, ~GeoDiedLat,
popup = content3, group = "Verdi",
icon = two_icon, data = ver_map) %>%
addPolylines(data = rach_map, lng = ~Long, lat = ~Lat,
smoothFactor = 4, weight = 2, opacity = 1,
color = "#8B0000", group = "Rachmaninoff") %>%
addPolylines(data = tchai_map, lng = ~Long, lat = ~Lat,
smoothFactor = 4, weight = 2, opacity = 1,
color = "#CFB53B", group = "Tchaikovsky") %>%
addPolylines(data = brahms_map, lng = ~Long, lat = ~Lat,
smoothFactor = 4, weight = 2, opacity = 1,
color = "#228B22", group = "Brahms") %>%
addPolylines(data = berlioz_map, lng = ~Long, lat = ~Lat,
smoothFactor = 4, weight = 2, opacity = 1,
color = "#800080", group = "Berlioz") %>%
addPolylines(data = chopin_map, lng = ~Long, lat = ~Lat,
smoothFactor = 4, weight = 2, opacity = 1,
color = "#87ceeb", group = "Chopin") %>%
addPolylines(data = beethoven_map, lng = ~Long, lat = ~Lat,
smoothFactor = 4, weight = 2, opacity = 1,
color = "#8B4513", group = "Beethoven") %>%
addPolylines(data = dvorak_map, lng = ~Long, lat = ~Lat,
smoothFactor = 4, weight = 2, opacity = 1,
color = "#A9A9A9", group = "Dvorak") %>%
addPolylines(data = verdi_map, lng = ~Long, lat = ~Lat,
smoothFactor = 4, weight = 2, opacity = 1,
color = "#FF8C00", group = "Verdi") %>%
addPolylines(data = mahler_map, lng = ~Long, lat = ~Lat,
smoothFactor = 4, weight = 2, opacity = 1,
color = "#32CD32", group = "Mahler") %>%
addLayersControl(
baseGroups = c("OpenStreetMap"),
overlayGroups = c("Beethoven","Berlioz", "Brahms",  "Chopin", "Dvorak",
"Mahler","Rachmaninoff", "Tchaikovsky", "Verdi"),
options = layersControlOptions(collapsed = FALSE)) %>%
hideGroup(c("Beethoven","Berlioz","Chopin",  "Dvorak",
"Mahler","Rachmaninoff", "Tchaikovsky", "Verdi"))
m
#Done for now!
library(ggrepel)
library(plotly)
library(ggthemes)
t <- read.csv("tchaikovsky2.csv")
r <- read.csv("rachmaninoff2.csv")
c <- read.csv("chopin.csv")
br <- read.csv("brahms.csv")
be <- read.csv("berlioz.csv")
st <- read.csv("strauss.csv")
Composers <- rbind(r, t, c, br, be)
comp_short <- Composers %>% filter(time <= 15000)
cols <- c("Rachmaninoff" = "Dark Red",
"Tchaikovsky" = "Gold",
"Brahms" = "Dark Green",
"Berlioz" = "Violet",
"Chopin" = "Light Blue",
"Beethoven" = "Brown",
"Dvorak" = "Gray",
"Verdi" = "Orange",
"Mahler"= "Light Green")
Piece <- comp_short$piece
Roman_Numeral <- comp_short$norm_roman_num
g<- ggplot(comp_short, aes(x = time, y = Roman_Numeral, group = Piece)) +
geom_point(size = .2) + geom_line(aes(color = Piece), alpha = .25)  + theme_tufte() +
facet_wrap(~composer, nrow = 6) +theme(axis.ticks = element_blank(),
axis.text.x = element_blank(),
legend.title = element_blank(),
legend.position = "none") +
ylab(NULL) + xlab("Roman Numerals") +
ggtitle("Harmonic Movement Among Romantic Era Composers")
ggplotly(g, tooltip = c("y", "colour")) # lineplot attempt faceted by composer eventually by country
g<- ggplot(comp_short, aes(x = time, y = Roman_Numeral, group = Piece)) +
geom_point(size = .2) + geom_line(aes(color = Piece), alpha = .25)  + theme_tufte() +
facet_wrap(~Type, nrow = 6) +theme(axis.ticks = element_blank(),
axis.text.x = element_blank(),
legend.title = element_blank(),
legend.position = "none") +
ylab(NULL) + xlab("Roman Numerals") +
ggtitle("Harmonic Movement in the Romantic Era")
ggplotly(g, tooltip = c("y", "colour"))
#done for now!
tone_cols <- c("Major" = "Blue", "Minor" = "Dark Red", "Unknown" = "Black")
r_V <- Composers %>% filter(one_lag_tran == "Gdom7", tran_chord_named != "Gdom7",
tran_chord_named != "Gmaj")
g2 <- ggplot(r_V, aes(x = norm_roman_num)) + geom_bar(aes(fill = Tonality)) +
theme_tufte() + ggtitle("Cadential Frequency: Chords Following V")  +
xlab("Roman Numerals") + ylab("Count") + theme(legend.position = "none") +
facet_wrap(~Tonality) + coord_flip() + scale_fill_manual(values = tone_cols) # example barchart
g2
#done for now!
tone_cols <- c("Major" = "Blue", "Minor" = "Dark Red", "Unknown" = "Black")
tone_opac <- c("Major" = 20, "Minor" = 10)
r_V <- Composers %>% filter(one_lag_tran == "Gdom7", tran_chord_named != "Gdom7",
tran_chord_named != "Gmaj")
g2 <- ggplot(r_V, aes(x = norm_roman_num)) + geom_bar(aes(fill = Tonality)) +
theme_tufte() + ggtitle("Cadential Frequency: Chords Following V")  +
xlab("Roman Numerals") + ylab("Count") + theme(legend.position = "none") +
facet_grid(composer ~ Tonality) + coord_flip() +
scale_fill_manual(values = tone_cols) # example barchart
ggplotly(g2)
#Done for now!
library(networkD3)
str(Composers)
net<- Composers %>% select(norm_roman_num)
net <- mutate(net,
rn_lag = lag(norm_roman_num),
rn_lag2 = lag(norm_roman_num, n = 2),
rn_lag3 = lag(norm_roman_num, n = 3))
net <- net[-1:-3,]
net <- net %>% select(rn_lag3, rn_lag2, rn_lag, norm_roman_num)
net <- net %>% filter(rn_lag != rn_lag2, rn_lag2 != rn_lag3, norm_roman_num != rn_lag)
gnet <- net %>% select(rn_lag, norm_roman_num)
gnet <- distinct(gnet)
graph <- graph_from_data_frame(gnet, directed = T)
library(igraph)
net<- Composers %>% select(norm_roman_num)
net <- mutate(net,
rn_lag = lag(norm_roman_num),
rn_lag2 = lag(norm_roman_num, n = 2),
rn_lag3 = lag(norm_roman_num, n = 3))
net <- net[-1:-3,]
net <- net %>% select(rn_lag3, rn_lag2, rn_lag, norm_roman_num)
net <- net %>% filter(rn_lag != rn_lag2, rn_lag2 != rn_lag3, norm_roman_num != rn_lag)
gnet <- net %>% select(rn_lag, norm_roman_num)
gnet <- distinct(gnet)
graph <- graph_from_data_frame(gnet, directed = T)
graph <- simplify(graph)
wc <- cluster_walktrap(graph)  # find "communities"
members <- membership(wc)
g2 <- igraph_to_networkD3(graph, group=members)
ip1 <- forceNetwork(Links = g2$links, Nodes = g2$nodes,
Source = 'source', Target = 'target',
NodeID = 'name', Group = 'group',
charge = -25,linkDistance = 200,
zoom = T, opacity = 1,
fontSize=24, arrows = F)
ip1
read.csv("ExpectedChords.csv")
enet <- read.csv("ExpectedChords.csv")
graph <- graph_from_data_frame(enet, directed = T)
enet <- read.csv("ExpectedChords.csv", header = TRUE)
graph <- graph_from_data_frame(enet, directed = T)
graph <- simplify(graph)
wc <- cluster_walktrap(graph)  # find "communities"
members <- membership(wc)
g2 <- igraph_to_networkD3(graph, group=members)
ip1 <- forceNetwork(Links = g2$links, Nodes = g2$nodes,
Source = 'source', Target = 'target',
NodeID = 'name', Group = 'group',
charge = -25,linkDistance = 200,
zoom = T, opacity = 1,
fontSize=24, arrows = F)
ip1
ip1 <- forceNetwork(Links = g2$links, Nodes = g2$nodes,
Source = 'source', Target = 'target',
NodeID = 'name', Group = 'group',
charge = -100,linkDistance = 200,
zoom = T, opacity = 1,
fontSize=24, arrows = F)
ip1
enet <- read.csv("ExpectedChords.csv", header = TRUE)
V(enet)$size <- centralization.degree(net)$res
V(enet)$size <- centralization.degree(net)$res
graph <- graph_from_data_frame(enet, directed = T)
V(graph)$size <- centralization.degree(net)$res
graph <- graph_from_data_frame(enet, directed = T)
V(graph)$size <- centralization.degree(net)$res
V(graph)$size <- centralization.degree(graph)$res
graph <- simplify(graph)
wc <- cluster_walktrap(graph)  # find "communities"
members <- membership(wc)
g2 <- igraph_to_networkD3(graph, group=members)
ip1 <- forceNetwork(Links = g2$links, Nodes = g2$nodes,
Source = 'source', Target = 'target',
NodeID = 'name', Group = 'group',
charge = -100,linkDistance = 200,
zoom = T, opacity = 1,
fontSize=24, arrows = F)
ip1
dat<- ggnetwork(graph, layout="fruchtermanreingold",
arrow.gap=0, cell.jitter=0)
library(ggnetwork)
dat<- ggnetwork(graph, layout="fruchtermanreingold",
arrow.gap=0, cell.jitter=0)
write.csv(dat, "dat.csv")
dat <- read.csv("dat.csv")
dat <- na.omit(dat)
ggplot(dat)+  geom_edges(data=dat,
aes(x=x, y=y, xend=xend, yend=yend, color = Party.affiliation, curvature=0.1, alpha=1/2)) +
geom_nodes(data=dat,
aes(x=x, y=y, xend=xend, yend=yend, size = sqrt(size))) +
geom_node_text(aes(label = dat$vertex.names), repel = TRUE, size = 2) +
theme_blank() + theme(legend.position = "none") +
scale_color_manual(values = cols)
ggplot(dat)+  geom_edges(data=dat,
aes(x=x, y=y, xend=xend, yend=yend, curvature=0.1, alpha=1/2)) +
geom_nodes(data=dat,
aes(x=x, y=y, xend=xend, yend=yend, size = sqrt(size))) +
geom_node_text(aes(label = dat$vertex.names), repel = TRUE, size = 2) +
theme_blank() + theme(legend.position = "none") +
scale_color_manual(values = cols)
ggplot(dat)+  geom_edges(data=dat,
aes(x=x, y=y, xend=xend, yend=yend, curvature=0.1, alpha=1/2)) +
geom_nodes(data=dat,
aes(x=x, y=y, xend=xend, yend=yend, size = sqrt(size)))+
theme_blank() + theme(legend.position = "none") +
scale_color_manual(values = cols)
ggplot(dat)+  geom_edges(data=dat,
aes(x=x, y=y, xend=xend, yend=yend, curvature=0.1, alpha=1/2)) +
geom_nodes(data=dat,
aes(x=x, y=y, xend=xend, yend=yend, size = sqrt(size)))+
theme_blank() + theme(legend.position = "none") +
scale_color_manual(values = cols)
dat
ggplot(dat)+  geom_edges(data=dat,
aes(x=x, y=y, xend=xend, yend=yend, curvature=0.1, alpha=1/2)) +
geom_nodes(data=dat,
aes(x=x, y=y, xend=xend, yend=yend, size = sqrt(size)))+
geom_nodelabel(aes(text = vertex.name))
ggplot(dat)+  geom_edges(data=dat,
aes(x=x, y=y, xend=xend, yend=yend, curvature=0.1, alpha=1/2)) +
geom_nodes(data=dat,
aes(x=x, y=y, xend=xend, yend=yend, size = sqrt(size)))+
geom_nodelabel(aes(text = dat$vertex.name))
ggplot(dat)+  geom_edges(data=dat,
aes(x=x, y=y, xend=xend, yend=yend, curvature=0.1, alpha=1/2)) +
geom_nodes(data=dat,
aes(x=x, y=y, xend=xend, yend=yend, size = sqrt(size)))+
geom_nodelabel(aes(text = dat$vertex.name))
ggplot(dat)+  geom_edges(data=dat,
aes(x=x, y=y, xend=xend, yend=yend, curvature=0.1, alpha=1/2)) +
geom_nodes(data=dat,
aes(x=x, y=y, xend=xend, yend=yend, size = sqrt(size)))+
geom_nodelabel(aes(x =x, y = y, text = dat$vertex.name))
ggplot(dat)+  geom_edges(data=dat,
aes(x=x, y=y, xend=xend, yend=yend, curvature=0.1, alpha=1/2)) +
geom_nodes(data=dat,
aes(x=x, y=y, xend=xend, yend=yend, size = sqrt(size)))+
geom_nodelabel(aes(x =x, y = y, label = dat$vertex.name))
theme_tufte() + theme(legend.position = "none") +
scale_color_manual(values = cols)
ggplot(dat)+  geom_edges(data=dat,
aes(x=x, y=y, xend=xend, yend=yend, curvature=0.1, alpha=1/2)) +
geom_nodes(data=dat,
aes(x=x, y=y, xend=xend, yend=yend, size = size))+
geom_nodelabel(aes(x =x, y = y, label = dat$vertex.name)) +
theme_tufte() + theme(legend.position = "none") +
scale_color_manual(values = cols)
ggplot(dat)+  geom_edges(data=dat,
aes(x=x, y=y, xend=xend, yend=yend, curvature=0.1, alpha=1/2)) +
geom_nodes(data=dat,
aes(x=x, y=y, xend=xend, yend=yend, size = size))+
geom_nodelabel(aes(x =x, y = y, label = dat$vertex.name)) +
theme_tufte() + theme(legend.position = "none") +
scale_color_manual(values = cols) + xlab(NULL) + ylab(NULL)
ggplot(dat)+  geom_edges(data=dat,
aes(x=x, y=y, xend=xend, yend=yend, curvature=0.1, alpha=1/2)) +
geom_nodes(data=dat,
aes(x=x, y=y, xend=xend, yend=yend, size = size ^ 2))+
geom_nodelabel(aes(x =x, y = y, label = dat$vertex.name)) +
theme_tufte() + theme(legend.position = "none") +
scale_color_manual(values = cols) + xlab(NULL) + ylab(NULL)
ggplot(dat)+  geom_edges(data=dat,
aes(x=x, y=y, xend=xend, yend=yend, curvature=0.5, alpha=1/2)) +
geom_nodes(data=dat,
aes(x=x, y=y, xend=xend, yend=yend, size = size ^ 2))+
geom_nodelabel(aes(x =x, y = y, label = dat$vertex.name)) +
theme_tufte() + theme(legend.position = "none") +
scale_color_manual(values = cols) + xlab(NULL) + ylab(NULL)
?ggnetwork
ggnetwork(dat)+  geom_edges(data=dat,
aes(x=x, y=y, xend=xend, yend=yend, curvature=0.5, alpha=1/2)) +
geom_nodes(data=dat,
aes(x=x, y=y, xend=xend, yend=yend, size = size ^ 2))+
geom_nodelabel(aes(x =x, y = y, label = dat$vertex.name)) +
theme_tufte() + theme(legend.position = "none") +
scale_color_manual(values = cols) + xlab(NULL) + ylab(NULL)
ggplot(dat)+  geom_edges(data=dat,
aes(x=x, y=y, xend=xend, yend=yend, curvature=0.5, alpha=1/2)) +
geom_nodes(data=dat,
aes(x=x, y=y, xend=xend, yend=yend, size = size ^ 2))+
geom_nodelabel(aes(x =x, y = y, label = dat$vertex.name)) +
theme_tufte() + theme(legend.position = "none") +
scale_color_manual(values = cols) + xlab(NULL) + ylab(NULL)
ggplot(dat)+  geom_edges(data=dat,
aes(x=x, y=y, xend=xend, yend=yend, curvature=0.5, alpha=1/2)) +
geom_nodes(data=dat,
aes(x=x, y=y, xend=xend, yend=yend, size = size ^ 2))+
geom_label_repel(aes(x =x, y = y, label = dat$vertex.name)) +
theme_tufte() + theme(legend.position = "none") +
scale_color_manual(values = cols) + xlab(NULL) + ylab(NULL)
graph <- graph_from_data_frame(gnet, directed = T)
?simplify
graph <- simplify(graph, remove.multiple = F)
wc <- cluster_walktrap(graph)  # find "communities"
members <- membership(wc)
g2 <- igraph_to_networkD3(graph, group=members)
g2$nodes$size <- centralization.degree(graph)$res
ip1 <- forceNetwork(Links = g2$links, Nodes = g2$nodes,
Source = 'source', Target = 'target',
NodeID = 'name', Group = 'group',
Nodesize = 'size',
charge = -100,linkDistance = 200,
zoom = T, opacity = 1,
fontSize=24, arrows = F)
ip1
net<- Composers %>% select(norm_roman_num)
net <- mutate(net,
rn_lag = lag(norm_roman_num),
rn_lag2 = lag(norm_roman_num, n = 2),
rn_lag3 = lag(norm_roman_num, n = 3))
net <- net[-1:-3,]
net <- net %>% select(rn_lag3, rn_lag2, rn_lag, norm_roman_num)
net <- net %>% filter(rn_lag != rn_lag2, rn_lag2 != rn_lag3, norm_roman_num != rn_lag)
gnet <- net %>% select(rn_lag, norm_roman_num)
graph <- graph_from_data_frame(gnet, directed = T)
graph <- simplify(graph, remove.multiple = F)
wc <- cluster_walktrap(graph)  # find "communities"
members <- membership(wc)
g2 <- igraph_to_networkD3(graph, group=members)
g2$nodes$size <- centralization.degree(graph)$res
ip1 <- forceNetwork(Links = g2$links, Nodes = g2$nodes,
Source = 'source', Target = 'target',
NodeID = 'name', Group = 'group',
Nodesize = 'size',
charge = -100,linkDistance = 200,
zoom = T, opacity = 1,
fontSize=24, arrows = F)
ip1
?forceNetworks
?forceNetwork
graph <- simplify(graph, remove.multiple = T)
wc <- cluster_walktrap(graph)  # find "communities"
members <- membership(wc)
g2 <- igraph_to_networkD3(graph, group=members)
g2$nodes$size <- centralization.degree(graph)$res
ip1 <- forceNetwork(Links = g2$links, Nodes = g2$nodes,
Source = 'source', Target = 'target',
NodeID = 'name', Group = 'group',
Nodesize = 'size',
charge = -100,linkDistance = 200,
zoom = T, opacity = 1,
fontSize=24, arrows = F)
ip1
enet <- read.csv("ExpectedChords.csv", header = TRUE)
enet <- read.csv("ExpectedChords.csv", header = TRUE)
graph2 <- graph_from_data_frame(enet, directed = T)
graph2 <- simplify(graph2, remove.multiple = T)
wc2 <- cluster_walktrap(graph2)  # find "communities"
members2 <- membership(wc2)
g3 <- igraph_to_networkD3(graph2, group=members)
g3 <- igraph_to_networkD3(graph2, group=members)
g3 <- igraph_to_networkD3(graph2, group=members2)
g3$nodes$size <- centralization.degree(graph)$res
g3$nodes$size <- centralization.degree(graph2)$res
ip1 <- forceNetwork(Links = g3$links, Nodes = g3$nodes,
Source = 'source', Target = 'target',
NodeID = 'name', Group = 'group',
Nodesize = 'size',
charge = -100,linkDistance = 200,
zoom = T, opacity = 1,
fontSize=24, arrows = F)
ip2 <- forceNetwork(Links = g3$links, Nodes = g3$nodes,
Source = 'source', Target = 'target',
NodeID = 'name', Group = 'group',
Nodesize = 'size',
charge = -100,linkDistance = 200,
zoom = T, opacity = 1,
fontSize=24, arrows = F)
ip2
ip2 <- forceNetwork(Links = g3$links, Nodes = g3$nodes,
Source = 'source', Target = 'target',
NodeID = 'name', Group = 'group',
Nodesize = 'size',
charge = -1000,linkDistance = 200,
zoom = T, opacity = 1,
fontSize=24, arrows = F)
ip2
enet
